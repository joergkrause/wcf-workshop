//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Seminar.Service.ConsoleClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="U", Namespace="http://schemas.datacontract.org/2004/07/Seminar.DataSource")]
    [System.SerializableAttribute()]
    public partial class U : Seminar.Service.ConsoleClient.ServiceReference.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string N {
            get {
                return this.NField;
            }
            set {
                if ((object.ReferenceEquals(this.NField, value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R {
            get {
                return this.RField;
            }
            set {
                if ((object.ReferenceEquals(this.RField, value) != true)) {
                    this.RField = value;
                    this.RaisePropertyChanged("R");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string P {
            get {
                return this.PField;
            }
            set {
                if ((object.ReferenceEquals(this.PField, value) != true)) {
                    this.PField = value;
                    this.RaisePropertyChanged("P");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/Seminar.DataSource")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Seminar.Service.ConsoleClient.ServiceReference.U))]
    public partial class EntityBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFault", Namespace="http://schemas.datacontract.org/2004/07/Seminar.Service")]
    [System.SerializableAttribute()]
    public partial class UserFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://svc.meinefirma.de/userService", ConfigurationName="ServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.meinefirma.de/userService/IUserService/GetAll", ReplyAction="AllResult")]
        [System.ServiceModel.FaultContractAttribute(typeof(Seminar.Service.ConsoleClient.ServiceReference.UserFault), Action="http://svc.meinefirma.de/userService/IUserService/GetAllUserFaultFault", Name="UserFault", Namespace="http://schemas.datacontract.org/2004/07/Seminar.Service")]
        System.Collections.Generic.List<Seminar.Service.ConsoleClient.ServiceReference.U> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.meinefirma.de/userService/IUserService/GetAll", ReplyAction="AllResult")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Seminar.Service.ConsoleClient.ServiceReference.U>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.meinefirma.de/userService/IUserService/Count", ReplyAction="CountResult")]
        int Count();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://svc.meinefirma.de/userService/IUserService/Count", ReplyAction="CountResult")]
        System.Threading.Tasks.Task<int> CountAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Seminar.Service.ConsoleClient.ServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Seminar.Service.ConsoleClient.ServiceReference.IUserService>, Seminar.Service.ConsoleClient.ServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Seminar.Service.ConsoleClient.ServiceReference.U> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Seminar.Service.ConsoleClient.ServiceReference.U>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public int Count() {
            return base.Channel.Count();
        }
        
        public System.Threading.Tasks.Task<int> CountAsync() {
            return base.Channel.CountAsync();
        }
    }
}
